version: 2
jobs:
  build:
    environment:
      IMAGE_NAME: metrics
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
      - run:
          name: Build Docker image
          command: |
            export GITHUB_TOKEN=$GITHUB_TOKEN
            docker-compose up -d --build
      # Push all Docker images
      - run:
          name: Push Docker images
          command: |
            echo "$DOCKERHUB_PWD" | docker login -u "$DOCKERHUB_ID" --password-stdin
            # Define the repository names
            metrics_repo="samkryszto/metrics-app"
            pgadmin_repo="samkryszto/pgadmin"
            postgres_repo="samkryszto/postgres"

            # Get the image IDs for the services
            images=($(docker-compose images -q))

            # Get the build number
            build_number=${CIRCLE_BUILD_NUM:-local}

            # Assign the first three images to the corresponding repositories and push them with the build number as the tag
            docker tag ${images[0]} $metrics_repo:$build_number
            docker push $metrics_repo:$build_number

            docker tag ${images[1]} $pgadmin_repo:$build_number
            docker push $pgadmin_repo:$build_number

            docker tag ${images[2]} $postgres_repo:$build_number
            docker push $postgres_repo:$build_number

            # Additionally, tag and push them as 'latest' if the build number is not 'local'
            if [ "$build_number" != "local" ]; then
              docker tag ${images[0]} $metrics_repo:latest
              docker push $metrics_repo:latest

              docker tag ${images[1]} $pgadmin_repo:latest
              docker push $postgres_repo:latest

              docker tag ${images[2]} $postgres_repo:latest
              docker push $pgadmin_repo:latest
            fi
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: main