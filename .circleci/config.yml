version: 2
jobs:
  build:
    environment:
      IMAGE_NAME: metrics
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
      - run:
          name: Build Docker image
          command: |
            export GITHUB_TOKEN=$GITHUB_TOKEN
            docker-compose up -d --build
      - run:
          name: List container images
          command: docker ps --format "{{.Image}}"
      - run:
    name: Push Docker images
    command: |
      echo "$DOCKERHUB_PWD" | docker login -u "$DOCKERHUB_ID" --password-stdin
      # Define the repository names
      metrics_repo="samkryszto/metrics-app"
      pgadmin_repo="samkryszto/pgadmin"
      postgres_repo="samkryszto/postgres"

      # Assign and push the metrics-app image
      docker tag metrics-app:latest $metrics_repo:${CIRCLE_BUILD_NUM:-local}
      docker push $metrics_repo:${CIRCLE_BUILD_NUM:-local}

      # Assign and push the postgres image
      docker tag postgres:latest $postgres_repo:${CIRCLE_BUILD_NUM:-local}
      docker push $postgres_repo:${CIRCLE_BUILD_NUM:-local}

      # Assign and push the pgadmin image
      docker tag dpage/pgadmin4:latest $pgadmin_repo:${CIRCLE_BUILD_NUM:-local}
      docker push $pgadmin_repo:${CIRCLE_BUILD_NUM:-local}

      # Additionally, tag and push them as 'latest' if the build number is not 'local'
      if [ "${CIRCLE_BUILD_NUM:-local}" != "local" ]; then
        docker tag metrics-app:latest $metrics_repo:latest
        docker push $metrics_repo:latest

        docker tag postgres:latest $postgres_repo:latest
        docker push $postgres_repo:latest

        docker tag dpage/pgadmin4:latest $pgadmin_repo:latest
        docker push $pgadmin_repo:latest
      fi
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: main